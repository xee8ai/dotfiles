#!/usr/sbin/nft -f

define DOCKER_INTERFACE = docker0
define DOCKER_IP = 10.111.0.0/14

# flush rules in own table
# on boot that doesn't exist â€“ so we define it first
table inet xee-rules-inet {
}
flush table inet xee-rules-inet

table inet xee-rules-inet {

    chain INPUT {
        type filter hook input priority 0
        policy drop

        # drop invalid packets
        ct state invalid counter drop comment "dropped invalid packets"

        # run checks for some tcp flag combinations
        jump XEE_TCP_CHECKS

        # allow ping
        icmp type echo-request limit rate 4/second accept

        # allow traffic from established and related
        ct state established,related accept

        # accept incoming traffic from loopback interface
        iifname "lo" accept

        # check if there are rules defined by fwknop
        jump FWKNOP_INPUT

        # check if libvirt guest traffic
        jump LIBVIRT_BRIDGE

        # check if docker traffic
        jump DOCKER

        # handle special traffic in own chains
        tcp dport 22  jump XEE_INPUT_SSH
        tcp dport {80, 443}  jump XEE_INPUT_WEB

        # accept neighbour discovery otherwise IPv6 connectivity breaks
        icmpv6 type { nd-neighbor-solicit, nd-router-advert, nd-neighbor-advert } accept
    }

    chain XEE_TCP_CHECKS {
        tcp flags & (fin|syn|rst|psh|ack|urg) == 0x0 counter drop comment "dropped tcp flag related"
        tcp flags & (fin|syn) == fin|syn counter drop comment "dropped tcp flag related"
        tcp flags & (syn|rst) == syn|rst counter drop comment "dropped tcp flag related"
        tcp flags & (fin|rst) == fin|rst counter drop comment "dropped tcp flag related"
        tcp flags & (fin|ack) == fin counter drop comment "dropped tcp flag related"
        tcp flags & (psh|ack) == psh counter drop comment "dropped tcp flag related"
        tcp flags & (ack|urg) == urg counter drop comment "dropped tcp flag related"
    }

    chain XEE_INPUT_SSH {
        ip saddr 192.168.122.0/24 accept
        counter comment "dropped incoming ssh packets"
    }

    chain XEE_INPUT_WEB {
        ip saddr 192.168.122.0/24 accept
        counter comment "dropped incoming http(s) packets"
    }

    # dummy rule; traffic from/to libvirt guests has to be accepted here (=inet)
    # otherwise the ACCEPT in ip/ip6 tables would not be used
    chain LIBVIRT_BRIDGE {
        iifname "virbr0" accept
        oifname "virbr0" accept
    }

    # dummy rule; traffic from/to docker containers has to be accepted here (=inet)
    chain DOCKER {
        ip saddr $DOCKER_IP accept
        ip daddr $DOCKER_IP accept
    }

    chain FORWARD {
        type filter hook forward priority 0

        # we are not a router
        policy drop

        ct state vmap { established : accept, related : accept, invalid : drop }

        # check if libvirt guest traffic
        jump LIBVIRT_BRIDGE

        # check if docker traffic
        jump DOCKER

        counter comment "dropped forward packets"
    }

    chain OUTPUT {
        type filter hook output priority 0
        policy accept
    }

    chain FWKNOP_INPUT {
    }

    chain postrouting {
        type nat hook postrouting priority srcnat
        policy accept

        # masquerade outgoing docker traffic
        oifname != $DOCKER_INTERFACE ip saddr $DOCKER_IP masquerade
    }

}
